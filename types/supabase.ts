/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/": {
        get: {
            responses: {
                /** OK */
                200: unknown;
            };
        };
    };
    "/messages": {
        get: {
            parameters: {
                query: {
                    id?: parameters["rowFilter.messages.id"];
                    insert_at?: parameters["rowFilter.messages.insert_at"];
                    message?: parameters["rowFilter.messages.message"];
                    user_id?: parameters["rowFilter.messages.user_id"];
                    ticket_id?: parameters["rowFilter.messages.ticket_id"];
                    /** Filtering Columns */
                    select?: parameters["select"];
                    /** Ordering */
                    order?: parameters["order"];
                    /** Limiting and Pagination */
                    offset?: parameters["offset"];
                    /** Limiting and Pagination */
                    limit?: parameters["limit"];
                };
                header: {
                    /** Limiting and Pagination */
                    Range?: parameters["range"];
                    /** Limiting and Pagination */
                    "Range-Unit"?: parameters["rangeUnit"];
                    /** Preference */
                    Prefer?: parameters["preferCount"];
                };
            };
            responses: {
                /** OK */
                200: {
                    schema: definitions["messages"][];
                };
                /** Partial Content */
                206: unknown;
            };
        };
        post: {
            parameters: {
                body: {
                    /** messages */
                    messages?: definitions["messages"];
                };
                query: {
                    /** Filtering Columns */
                    select?: parameters["select"];
                };
                header: {
                    /** Preference */
                    Prefer?: parameters["preferReturn"];
                };
            };
            responses: {
                /** Created */
                201: unknown;
            };
        };
        delete: {
            parameters: {
                query: {
                    id?: parameters["rowFilter.messages.id"];
                    insert_at?: parameters["rowFilter.messages.insert_at"];
                    message?: parameters["rowFilter.messages.message"];
                    user_id?: parameters["rowFilter.messages.user_id"];
                    ticket_id?: parameters["rowFilter.messages.ticket_id"];
                };
                header: {
                    /** Preference */
                    Prefer?: parameters["preferReturn"];
                };
            };
            responses: {
                /** No Content */
                204: never;
            };
        };
        patch: {
            parameters: {
                query: {
                    id?: parameters["rowFilter.messages.id"];
                    insert_at?: parameters["rowFilter.messages.insert_at"];
                    message?: parameters["rowFilter.messages.message"];
                    user_id?: parameters["rowFilter.messages.user_id"];
                    ticket_id?: parameters["rowFilter.messages.ticket_id"];
                };
                body: {
                    /** messages */
                    messages?: definitions["messages"];
                };
                header: {
                    /** Preference */
                    Prefer?: parameters["preferReturn"];
                };
            };
            responses: {
                /** No Content */
                204: never;
            };
        };
    };
    "/role_permissions": {
        get: {
            parameters: {
                query: {
                    id?: parameters["rowFilter.role_permissions.id"];
                    role?: parameters["rowFilter.role_permissions.role"];
                    premission?: parameters["rowFilter.role_permissions.premission"];
                    /** Filtering Columns */
                    select?: parameters["select"];
                    /** Ordering */
                    order?: parameters["order"];
                    /** Limiting and Pagination */
                    offset?: parameters["offset"];
                    /** Limiting and Pagination */
                    limit?: parameters["limit"];
                };
                header: {
                    /** Limiting and Pagination */
                    Range?: parameters["range"];
                    /** Limiting and Pagination */
                    "Range-Unit"?: parameters["rangeUnit"];
                    /** Preference */
                    Prefer?: parameters["preferCount"];
                };
            };
            responses: {
                /** OK */
                200: {
                    schema: definitions["role_permissions"][];
                };
                /** Partial Content */
                206: unknown;
            };
        };
        post: {
            parameters: {
                body: {
                    /** role_permissions */
                    role_permissions?: definitions["role_permissions"];
                };
                query: {
                    /** Filtering Columns */
                    select?: parameters["select"];
                };
                header: {
                    /** Preference */
                    Prefer?: parameters["preferReturn"];
                };
            };
            responses: {
                /** Created */
                201: unknown;
            };
        };
        delete: {
            parameters: {
                query: {
                    id?: parameters["rowFilter.role_permissions.id"];
                    role?: parameters["rowFilter.role_permissions.role"];
                    premission?: parameters["rowFilter.role_permissions.premission"];
                };
                header: {
                    /** Preference */
                    Prefer?: parameters["preferReturn"];
                };
            };
            responses: {
                /** No Content */
                204: never;
            };
        };
        patch: {
            parameters: {
                query: {
                    id?: parameters["rowFilter.role_permissions.id"];
                    role?: parameters["rowFilter.role_permissions.role"];
                    premission?: parameters["rowFilter.role_permissions.premission"];
                };
                body: {
                    /** role_permissions */
                    role_permissions?: definitions["role_permissions"];
                };
                header: {
                    /** Preference */
                    Prefer?: parameters["preferReturn"];
                };
            };
            responses: {
                /** No Content */
                204: never;
            };
        };
    };
    "/ticket_type": {
        get: {
            parameters: {
                query: {
                    id?: parameters["rowFilter.ticket_type.id"];
                    name?: parameters["rowFilter.ticket_type.name"];
                    description?: parameters["rowFilter.ticket_type.description"];
                    created_by?: parameters["rowFilter.ticket_type.created_by"];
                    /** Filtering Columns */
                    select?: parameters["select"];
                    /** Ordering */
                    order?: parameters["order"];
                    /** Limiting and Pagination */
                    offset?: parameters["offset"];
                    /** Limiting and Pagination */
                    limit?: parameters["limit"];
                };
                header: {
                    /** Limiting and Pagination */
                    Range?: parameters["range"];
                    /** Limiting and Pagination */
                    "Range-Unit"?: parameters["rangeUnit"];
                    /** Preference */
                    Prefer?: parameters["preferCount"];
                };
            };
            responses: {
                /** OK */
                200: {
                    schema: definitions["ticket_type"][];
                };
                /** Partial Content */
                206: unknown;
            };
        };
        post: {
            parameters: {
                body: {
                    /** ticket_type */
                    ticket_type?: definitions["ticket_type"];
                };
                query: {
                    /** Filtering Columns */
                    select?: parameters["select"];
                };
                header: {
                    /** Preference */
                    Prefer?: parameters["preferReturn"];
                };
            };
            responses: {
                /** Created */
                201: unknown;
            };
        };
        delete: {
            parameters: {
                query: {
                    id?: parameters["rowFilter.ticket_type.id"];
                    name?: parameters["rowFilter.ticket_type.name"];
                    description?: parameters["rowFilter.ticket_type.description"];
                    created_by?: parameters["rowFilter.ticket_type.created_by"];
                };
                header: {
                    /** Preference */
                    Prefer?: parameters["preferReturn"];
                };
            };
            responses: {
                /** No Content */
                204: never;
            };
        };
        patch: {
            parameters: {
                query: {
                    id?: parameters["rowFilter.ticket_type.id"];
                    name?: parameters["rowFilter.ticket_type.name"];
                    description?: parameters["rowFilter.ticket_type.description"];
                    created_by?: parameters["rowFilter.ticket_type.created_by"];
                };
                body: {
                    /** ticket_type */
                    ticket_type?: definitions["ticket_type"];
                };
                header: {
                    /** Preference */
                    Prefer?: parameters["preferReturn"];
                };
            };
            responses: {
                /** No Content */
                204: never;
            };
        };
    };
    "/tickets": {
        get: {
            parameters: {
                query: {
                    id?: parameters["rowFilter.tickets.id"];
                    user_id?: parameters["rowFilter.tickets.user_id"];
                    created_at?: parameters["rowFilter.tickets.created_at"];
                    ticket_type_id?: parameters["rowFilter.tickets.ticket_type_id"];
                    description?: parameters["rowFilter.tickets.description"];
                    state?: parameters["rowFilter.tickets.state"];
                    /** Filtering Columns */
                    select?: parameters["select"];
                    /** Ordering */
                    order?: parameters["order"];
                    /** Limiting and Pagination */
                    offset?: parameters["offset"];
                    /** Limiting and Pagination */
                    limit?: parameters["limit"];
                };
                header: {
                    /** Limiting and Pagination */
                    Range?: parameters["range"];
                    /** Limiting and Pagination */
                    "Range-Unit"?: parameters["rangeUnit"];
                    /** Preference */
                    Prefer?: parameters["preferCount"];
                };
            };
            responses: {
                /** OK */
                200: {
                    schema: definitions["tickets"][];
                };
                /** Partial Content */
                206: unknown;
            };
        };
        post: {
            parameters: {
                body: {
                    /** tickets */
                    tickets?: definitions["tickets"];
                };
                query: {
                    /** Filtering Columns */
                    select?: parameters["select"];
                };
                header: {
                    /** Preference */
                    Prefer?: parameters["preferReturn"];
                };
            };
            responses: {
                /** Created */
                201: unknown;
            };
        };
        delete: {
            parameters: {
                query: {
                    id?: parameters["rowFilter.tickets.id"];
                    user_id?: parameters["rowFilter.tickets.user_id"];
                    created_at?: parameters["rowFilter.tickets.created_at"];
                    ticket_type_id?: parameters["rowFilter.tickets.ticket_type_id"];
                    description?: parameters["rowFilter.tickets.description"];
                    state?: parameters["rowFilter.tickets.state"];
                };
                header: {
                    /** Preference */
                    Prefer?: parameters["preferReturn"];
                };
            };
            responses: {
                /** No Content */
                204: never;
            };
        };
        patch: {
            parameters: {
                query: {
                    id?: parameters["rowFilter.tickets.id"];
                    user_id?: parameters["rowFilter.tickets.user_id"];
                    created_at?: parameters["rowFilter.tickets.created_at"];
                    ticket_type_id?: parameters["rowFilter.tickets.ticket_type_id"];
                    description?: parameters["rowFilter.tickets.description"];
                    state?: parameters["rowFilter.tickets.state"];
                };
                body: {
                    /** tickets */
                    tickets?: definitions["tickets"];
                };
                header: {
                    /** Preference */
                    Prefer?: parameters["preferReturn"];
                };
            };
            responses: {
                /** No Content */
                204: never;
            };
        };
    };
    "/user_roles": {
        get: {
            parameters: {
                query: {
                    id?: parameters["rowFilter.user_roles.id"];
                    role?: parameters["rowFilter.user_roles.role"];
                    /** Filtering Columns */
                    select?: parameters["select"];
                    /** Ordering */
                    order?: parameters["order"];
                    /** Limiting and Pagination */
                    offset?: parameters["offset"];
                    /** Limiting and Pagination */
                    limit?: parameters["limit"];
                };
                header: {
                    /** Limiting and Pagination */
                    Range?: parameters["range"];
                    /** Limiting and Pagination */
                    "Range-Unit"?: parameters["rangeUnit"];
                    /** Preference */
                    Prefer?: parameters["preferCount"];
                };
            };
            responses: {
                /** OK */
                200: {
                    schema: definitions["user_roles"][];
                };
                /** Partial Content */
                206: unknown;
            };
        };
        post: {
            parameters: {
                body: {
                    /** user_roles */
                    user_roles?: definitions["user_roles"];
                };
                query: {
                    /** Filtering Columns */
                    select?: parameters["select"];
                };
                header: {
                    /** Preference */
                    Prefer?: parameters["preferReturn"];
                };
            };
            responses: {
                /** Created */
                201: unknown;
            };
        };
        delete: {
            parameters: {
                query: {
                    id?: parameters["rowFilter.user_roles.id"];
                    role?: parameters["rowFilter.user_roles.role"];
                };
                header: {
                    /** Preference */
                    Prefer?: parameters["preferReturn"];
                };
            };
            responses: {
                /** No Content */
                204: never;
            };
        };
        patch: {
            parameters: {
                query: {
                    id?: parameters["rowFilter.user_roles.id"];
                    role?: parameters["rowFilter.user_roles.role"];
                };
                body: {
                    /** user_roles */
                    user_roles?: definitions["user_roles"];
                };
                header: {
                    /** Preference */
                    Prefer?: parameters["preferReturn"];
                };
            };
            responses: {
                /** No Content */
                204: never;
            };
        };
    };
    "/users": {
        get: {
            parameters: {
                query: {
                    id?: parameters["rowFilter.users.id"];
                    first_name?: parameters["rowFilter.users.first_name"];
                    last_name?: parameters["rowFilter.users.last_name"];
                    email?: parameters["rowFilter.users.email"];
                    /** Filtering Columns */
                    select?: parameters["select"];
                    /** Ordering */
                    order?: parameters["order"];
                    /** Limiting and Pagination */
                    offset?: parameters["offset"];
                    /** Limiting and Pagination */
                    limit?: parameters["limit"];
                };
                header: {
                    /** Limiting and Pagination */
                    Range?: parameters["range"];
                    /** Limiting and Pagination */
                    "Range-Unit"?: parameters["rangeUnit"];
                    /** Preference */
                    Prefer?: parameters["preferCount"];
                };
            };
            responses: {
                /** OK */
                200: {
                    schema: definitions["users"][];
                };
                /** Partial Content */
                206: unknown;
            };
        };
        post: {
            parameters: {
                body: {
                    /** users */
                    users?: definitions["users"];
                };
                query: {
                    /** Filtering Columns */
                    select?: parameters["select"];
                };
                header: {
                    /** Preference */
                    Prefer?: parameters["preferReturn"];
                };
            };
            responses: {
                /** Created */
                201: unknown;
            };
        };
        delete: {
            parameters: {
                query: {
                    id?: parameters["rowFilter.users.id"];
                    first_name?: parameters["rowFilter.users.first_name"];
                    last_name?: parameters["rowFilter.users.last_name"];
                    email?: parameters["rowFilter.users.email"];
                };
                header: {
                    /** Preference */
                    Prefer?: parameters["preferReturn"];
                };
            };
            responses: {
                /** No Content */
                204: never;
            };
        };
        patch: {
            parameters: {
                query: {
                    id?: parameters["rowFilter.users.id"];
                    first_name?: parameters["rowFilter.users.first_name"];
                    last_name?: parameters["rowFilter.users.last_name"];
                    email?: parameters["rowFilter.users.email"];
                };
                body: {
                    /** users */
                    users?: definitions["users"];
                };
                header: {
                    /** Preference */
                    Prefer?: parameters["preferReturn"];
                };
            };
            responses: {
                /** No Content */
                204: never;
            };
        };
    };
    "/rpc/handle_new_user": {
        post: {
            parameters: {
                body: {
                    args: { [key: string]: unknown };
                };
                header: {
                    /** Preference */
                    Prefer?: parameters["preferParams"];
                };
            };
            responses: {
                /** OK */
                200: unknown;
            };
        };
    };
    "/rpc/authorize": {
        post: {
            parameters: {
                body: {
                    args: {
                        user_id: string;
                        request_permission: string;
                    };
                };
                header: {
                    /** Preference */
                    Prefer?: parameters["preferParams"];
                };
            };
            responses: {
                /** OK */
                200: unknown;
            };
        };
    };
}

export interface definitions {
    messages: {
        /**
         * Note:
         * This is a Primary Key.<pk/>
         */
        id: number;
        insert_at: string;
        message?: string;
        /**
         * Note:
         * This is a Foreign Key to `users.id`.<fk table='users' column='id'/>
         */
        user_id: string;
        /**
         * Note:
         * This is a Foreign Key to `tickets.id`.<fk table='tickets' column='id'/>
         */
        ticket_id: string;
    };
    role_permissions: {
        /**
         * Note:
         * This is a Primary Key.<pk/>
         */
        id: number;
        role: "admin" | "operator" | "user";
        premission:
            | "tickets.delete"
            | "tickets.update"
            | "user_roles.update"
            | "users.delete"
            | "users.update"
            | "users.insert"
            | "ticket_type.insert"
            | "ticket_type.update"
            | "ticket_type.delete"
            | "messages.delete";
    };
    ticket_type: {
        /**
         * Note:
         * This is a Primary Key.<pk/>
         */
        id: number;
        name: string;
        description?: string;
        /**
         * Note:
         * This is a Foreign Key to `users.id`.<fk table='users' column='id'/>
         */
        created_by?: string;
    };
    tickets: {
        /**
         * Note:
         * This is a Primary Key.<pk/>
         */
        id: string;
        /**
         * Note:
         * This is a Foreign Key to `users.id`.<fk table='users' column='id'/>
         */
        user_id: string;
        created_at?: string;
        /**
         * Note:
         * This is a Foreign Key to `ticket_type.id`.<fk table='ticket_type' column='id'/>
         */
        ticket_type_id: number;
        description?: string;
        state?: "waiting" | "ongoing" | "done";
    };
    user_roles: {
        /**
         * Note:
         * This is a Primary Key.<pk/>
         */
        id: string;
        role?: "admin" | "operator" | "user";
    };
    users: {
        /**
         * Note:
         * This is a Primary Key.<pk/>
         */
        id: string;
        first_name?: string;
        last_name?: string;
        email?: string;
    };
}

export interface parameters {
    /** Preference */
    preferParams: "params=single-object";
    /** Preference */
    preferReturn: "return=representation" | "return=minimal" | "return=none";
    /** Preference */
    preferCount: "count=none";
    /** Filtering Columns */
    select: string;
    /** On Conflict */
    on_conflict: string;
    /** Ordering */
    order: string;
    /** Limiting and Pagination */
    range: string;
    /** Limiting and Pagination */
    rangeUnit: string;
    /** Limiting and Pagination */
    offset: string;
    /** Limiting and Pagination */
    limit: string;
    /** messages */
    "body.messages": definitions["messages"];
    "rowFilter.messages.id": string;
    "rowFilter.messages.insert_at": string;
    "rowFilter.messages.message": string;
    "rowFilter.messages.user_id": string;
    "rowFilter.messages.ticket_id": string;
    /** role_permissions */
    "body.role_permissions": definitions["role_permissions"];
    "rowFilter.role_permissions.id": string;
    "rowFilter.role_permissions.role": string;
    "rowFilter.role_permissions.premission": string;
    /** ticket_type */
    "body.ticket_type": definitions["ticket_type"];
    "rowFilter.ticket_type.id": string;
    "rowFilter.ticket_type.name": string;
    "rowFilter.ticket_type.description": string;
    "rowFilter.ticket_type.created_by": string;
    /** tickets */
    "body.tickets": definitions["tickets"];
    "rowFilter.tickets.id": string;
    "rowFilter.tickets.user_id": string;
    "rowFilter.tickets.created_at": string;
    "rowFilter.tickets.ticket_type_id": string;
    "rowFilter.tickets.description": string;
    "rowFilter.tickets.state": string;
    /** user_roles */
    "body.user_roles": definitions["user_roles"];
    "rowFilter.user_roles.id": string;
    "rowFilter.user_roles.role": string;
    /** users */
    "body.users": definitions["users"];
    "rowFilter.users.id": string;
    "rowFilter.users.first_name": string;
    "rowFilter.users.last_name": string;
    "rowFilter.users.email": string;
}

export interface operations {}

export interface external {}
